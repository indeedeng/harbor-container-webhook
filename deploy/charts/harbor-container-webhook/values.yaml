# Default values for harbor-container-webhook.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# -- Minimum available pods set in PodDisruptionBudget.
# Define either 'minAvailable' or 'maxUnavailable', never both.
minAvailable: 1
# -- Maximum unavailable pods set in PodDisruptionBudget. If set, 'minAvailable' is ignored.
# maxUnavailable: 1
# -- Eviction policy for unhealthy pods guarded by PodDisruptionBudget.
# Ref: https://kubernetes.io/blog/2023/01/06/unhealthy-pod-eviction-policy-for-pdbs/
unhealthyPodEvictionPolicy: ""

image:
  repository: ghcr.io/indeedeng/harbor-container-webhook
  pullPolicy: IfNotPresent
  tag: "main"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65532

service:
  type: ClusterIP
  port: 9443

additionalVolumeMounts: []

additionalVolumes: []

initContainers: []

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}

extraArgs: []
extraEnv: []

priorityClassName: ""

certManager:
  enabled: true
  apiVersion: "cert-manager.io/v1"
  duration: 2160h0m0s
  renewBefore: 360h0m0s

webhook:
  namespaceSelector:
    matchExpressions:
      - key: "goharbor.io/harbor-container-webhook-disable"
        operator: NotIn
        values: ["true"]
  objectSelector:
    matchExpressions:
      - key: "goharbor.io/harbor-container-webhook-disable"
        operator: NotIn
        values: ["true"]
  failurePolicy: Ignore

## configures the webhook rules, which are evaluated for each image in a pod
rules: []
#  - name: 'docker.io rewrite rule'
#    # image refs must match at least one of the rules, and not match any excludes
#    matches:
#      - '^docker.io'
#    excludes:
#      # for example, exclude ubuntu from harbor's proxy cache
#      - '^docker.io/(library/)?ubuntu:.*$'
#    replace: 'harbor.example.com/dockerhub-proxy'
#    checkUpstream: false
#  - name: 'docker.io ubuntu rewrite rule'
#    # image refs must match at least one of the rules, and not match any excludes
#    matches:
#      - '^docker.io/(library/)?ubuntu:.*$'
#    replace: 'harbor.example.com/ubuntu-proxy'
#    checkUpstream: true # tests if the manifest for the rewritten image exists
#    platforms: # defaults to linux/amd64, only used if checkUpstream is set
#      - linux/amd64
#      - linux/arm64

extraRules: []

certDir: ""
prometheus:
  enabled: true
  port: 8080
healthPort: 8090
verbose: false

metrics:
  serviceMonitor:
    enabled: false
    jobLabel: ""
    interval: ""
    scrapeTimeout: ""
    honorLabels: false
    metricRelabelings: []
    relabelings: []
    labels: {}
    scheme: http
